#!/bin/bash

echo "üîç Testing Environment Configuration..."

# ‚úÖ Check if ~/.env exists
if [[ -f "$HOME/.env" ]]; then
    echo "‚úÖ ~/.env Found"
else
    echo "‚ö†Ô∏è ~/.env Missing! Some configurations may not load."
fi

# ‚úÖ Check if ~/.zshrc exists
if [[ -f "$HOME/.zshrc" ]]; then
    echo "‚úÖ ~/.zshrc Found"
else
    echo "‚ö†Ô∏è ~/.zshrc Missing! Shell may not be configured properly."
fi

# üõ† Validate ~/.env (Ensure all variables have correct format)
echo "üîé Validating ~/.env syntax..."
INVALID_LINES=$(grep -Ev "^[A-Za-z_][A-Za-z0-9_]*=[^ ]+" "$HOME/.env" | grep -v '^#')

if [[ -n "$INVALID_LINES" ]]; then
    echo "‚ùå Syntax Errors in ~/.env:"
    echo "$INVALID_LINES"
    exit 1
else
    echo "‚úÖ ~/.env syntax is valid."
fi

# üèóÔ∏è Load ~/.env into the current shell
echo "üîÑ Loading ~/.env..."
set -o allexport
source "$HOME/.env"
set +o allexport
echo "‚úÖ Environment variables loaded successfully."

# üèóÔ∏è Load ~/.zshrc (without restarting the shell)
echo "üîÑ Sourcing ~/.zshrc..."
source "$HOME/.zshrc"
echo "‚úÖ ~/.zshrc loaded successfully."

# üõ† Test if critical environment variables are set
REQUIRED_VARS=("APP_NAME" "DB_CONNECTION" "DB_HOST" "DB_PORT" "DB_DATABASE" "DB_USERNAME" "DB_PASSWORD")
MISSING_VARS=()

for VAR in "${REQUIRED_VARS[@]}"; do
    if [[ -z "${!VAR}" ]]; then
        MISSING_VARS+=("$VAR")
    fi
done

if [[ ${#MISSING_VARS[@]} -gt 0 ]]; then
    echo "‚ö†Ô∏è Missing Required Environment Variables:"
    printf " - %s\n" "${MISSING_VARS[@]}"
    exit 1
else
    echo "‚úÖ All required environment variables are set."
fi

# üöÄ Test Database Connection (if MongoDB is being used)
if [[ "$DB_CONNECTION" == "mongodb" ]]; then
    echo "üîé Testing MongoDB Connection..."
    mongosh "$MONGODB_URI" --eval 'db.runCommand({ connectionStatus: 1 })' &>/dev/null
    if [[ $? -eq 0 ]]; then
        echo "‚úÖ MongoDB Connection Successful!"
    else
        echo "‚ùå MongoDB Connection Failed!"
    fi
fi

echo "‚úÖ Environment check complete!"
